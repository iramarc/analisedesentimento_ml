name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Faz o checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Passo 2: Configura o Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Passo 3: Instala as dependências do Python
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install torch  # Instala PyTorch
          pip install pytest  # Instala pytest

      # Passo 4: Configura o Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Passo 5: Instala as dependências do Node.js
      - name: Install Node.js dependencies
        run: npm install

      # Passo 6: Inicia o servidor Flask em segundo plano
      - name: Start Flask server
        run: |
          nohup python app.py &  # Inicia o servidor Flask em segundo plano
        env:
          FLASK_ENV: development

      # Passo 7: Aguarda o Flask ficar pronto
      - name: Wait for Flask server to be ready
        run: sleep 20  # Aumenta o tempo de espera para garantir que o servidor Flask esteja pronto

      # Passo 8: Executa os testes do Cypress
      - name: Run Cypress tests
        run: npx cypress run

      # Passo 9: Executa os testes do Python (com `pytest`)
      - name: Run Python tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)  # Define a variável de ambiente PYTHONPATH
          pytest tests/test_benchmark.py  # Executa o teste benchmark
          pytest tests/test_benchmark_quality.py  # Executa o teste benchmark_quality
